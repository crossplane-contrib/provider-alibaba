apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: redisinstances.redis.alibaba.crossplane.io
spec:
  group: redis.alibaba.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - alibaba
    kind: RedisInstance
    listKind: RedisInstanceList
    plural: redisinstances
    singular: redisinstance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.dbInstanceStatus
      name: STATE
      type: string
    - jsonPath: .spec.forProvider.instanceType
      name: INSTANCE_TYPE
      type: string
    - jsonPath: .spec.forProvider.engineVersion
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RedisInstance is the Schema for the redisinstances API An RedisInstance is a managed resource that represents an Redis instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisInstanceSpec defines the desired state of RedisInstance
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RedisInstanceParameters define the desired state of an Redis instance.
                properties:
                  chargeType:
                    default: PostPaid
                    description: ChargeType is indicates payment type ChargeType：PrePaid/PostPaid
                    type: string
                  engineVersion:
                    description: EngineVersion indicates the database engine version. Redis：4.0/5.0
                    enum:
                    - "4.0"
                    - "5.0"
                    type: string
                  instanceClass:
                    description: InstanceClass is the machine class of the instance, e.g. "redis.logic.sharding.2g.8db.0rodb.8proxy.default"
                    type: string
                  instanceType:
                    description: Engine is the name of the database engine to be used for this instance. Engine is a required field.
                    enum:
                    - Redis
                    type: string
                  masterUsername:
                    description: 'MasterUsername is the name for the master user. Constraints:    * Required for Redis.    * Must be 1 to 16 letters or numbers.    * First character must be a letter.    * Cannot be a reserved word for the chosen database engine.'
                    type: string
                  networkType:
                    default: CLASSIC
                    description: NetworkType is indicates service network type NetworkType：CLASSIC/VPC
                    type: string
                  port:
                    description: InstancePort is indicates the database service port
                    type: integer
                  publiclyAccessible:
                    description: PubliclyAccessible is Public network of service exposure
                    type: boolean
                  vSwitchId:
                    description: VSwitchId is indicates VSwitch ID
                    type: string
                  vpcId:
                    description: VpcId is indicates VPC ID
                    type: string
                required:
                - engineVersion
                - instanceClass
                - instanceType
                - publiclyAccessible
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RedisInstanceStatus defines the observed state of RedisInstance
            properties:
              atProvider:
                description: RedisInstanceObservation is the representation of the current state that is observed.
                properties:
                  accountReady:
                    description: AccountReady specifies whether the initial user account (username + password) is ready
                    type: boolean
                  connectionReady:
                    description: ConnectionReady specifies whether the network connect is ready
                    type: boolean
                  dbInstanceID:
                    description: DBInstanceID specifies the Redis instance ID.
                    type: string
                  dbInstanceStatus:
                    description: DBInstanceStatus specifies the current state of this database.
                    type: string
                required:
                - accountReady
                - connectionReady
                - dbInstanceID
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
